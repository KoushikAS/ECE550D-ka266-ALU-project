module rightshift(out,in,shift_amt);
	input[31:0] in;
	input[4:0] shift_amt;
	output[31:0] out;
	
	wire[31:0] w1,w2,w3,w4;
	
	mux1bit mi31 (w1[31],shift_amt[0],in[31],in[31]);
	
	genvar i;
	generate
		for(i=30; i>-1; i = i-1) begin : mux1
			mux1bit mi (w1[i],shift_amt[0],in[i],in[i+1]);
		end
	endgenerate 
	
	mux1bit mj31 (w2[31],shift_amt[1],w1[31],w1[31]);
	mux1bit mj30 (w2[30],shift_amt[1],w1[31],w1[31]);
	
	genvar j;
	generate
		for(j=29; j>-1; j = j-1) begin : mux1
			mux1bit mj (w2[j],shift_amt[1],w1[j],w1[j+2]);
		end
	endgenerate 

	mux1bit mk31 (w3[31],shift_amt[2],w2[31],w2[31]);
	mux1bit mk30 (w3[30],shift_amt[2],w2[31],w2[31]);
	mux1bit mk31 (w3[29],shift_amt[2],w2[31],w2[31]);
	mux1bit mk30 (w3[28],shift_amt[2],w2[31],w2[31]);
	
	genvar k;
	generate
		for(k=27; k>-1; k = k-1) begin : mux1
			mux1bit mk (w3[i],shift_amt[2],w2[k],w2[k+4]);
		end
	endgenerate 	
	

	mux1bit ml31 (w4[31],shift_amt[2],w3[31],w3[31]);
	mux1bit ml30 (w4[30],shift_amt[2],w3[31],w3[31]);
	mux1bit ml31 (w4[29],shift_amt[2],w3[31],w3[31]);
	mux1bit ml30 (w4[28],shift_amt[2],w3[31],w3[31]);
	mux1bit ml31 (w4[31],shift_amt[2],w3[31],w3[31]);
	mux1bit ml30 (w4[30],shift_amt[2],w3[31],w3[31]);
	mux1bit ml31 (w4[29],shift_amt[2],w3[31],w3[31]);
	mux1bit ml30 (w4[28],shift_amt[2],w3[31],w3[31]);
	
	genvar l;
	generate
		for(l=27; l>-1; l = l-1) begin : mux1
			mux1bit ml (w4[l],shift_amt[2],w3[l],w3[l+8]);
		end
	endgenerate 	
	